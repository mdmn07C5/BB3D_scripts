{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"for",
				"foreach\tforeach"
			],
			[
				"RaycastAll",
				"RaycastAll(Vector3 origin, Vector3 direction, float maxDistance, int layerMask)\tRaycastHit[]"
			],
			[
				"GetKe",
				"GetKeyDown(string name)\tbool"
			],
			[
				"game",
				"GameObject\tGameObject"
			],
			[
				"racast",
				"RaycastAll(Vector3 origin, Vector3 direction)\tRaycastHit[]"
			],
			[
				"Vecto",
				"Vector3\tVector3"
			],
			[
				"Raycast",
				"RaycastHit\tR"
			],
			[
				"Raycas",
				"Raycast(Vector3 origin, Vector3 direction, float maxDistance)\tbool"
			],
			[
				"Ray",
				"Raycast(Vector3 origin, Vector3 direction)\tbool"
			],
			[
				"GetSc",
				"GetSceneByName(string name)\tScene"
			],
			[
				"Select",
				"SelectionGrid(int selected, string[] texts, int xCount, params GUILayoutOption[] options)\tint"
			],
			[
				"GuiLay",
				"GUILayout\tGUILayout"
			],
			[
				"LevelLo",
				"LevelLoseCallStac()\tIEnumerator"
			],
			[
				"OnLE",
				"OnLevelWin\tLevelChangeHandler"
			],
			[
				"LevelStar",
				"LevelStartCallStack()\tIEnumerator"
			],
			[
				"LevelW",
				"LevelWinCallStack()\tIEnumerator"
			],
			[
				"IEnum",
				"IEnumerator\tIEnumerator"
			],
			[
				"UnloadScene",
				"UnloadScene(string sceneName)\tIEnumerator"
			],
			[
				"Leve",
				"LevelStart()\tint"
			],
			[
				"Unloa",
				"UnloadScene(string sceneName)\tIEnumerator"
			],
			[
				"Start",
				"StartCoroutine(IEnumerator routine)\tCoroutine"
			],
			[
				"OnLe",
				"OnLevelStart\tLevelChangeHandler"
			],
			[
				"Load",
				"LoadScene(string sceneName)\tIEnumerator"
			],
			[
				"Level",
				"LevelChangeHandler\tLevelChangeHandler"
			],
			[
				"IEnu",
				"IEnumerator\tIEnumerator"
			],
			[
				"IEn",
				"IEnumerator\tIEnumerator"
			],
			[
				"end",
				"endregion\tendregion"
			],
			[
				"IEN",
				"IEnumerator\tIEnumerator"
			],
			[
				"Loa",
				"LoadScene(string sceneName)\tvoid"
			],
			[
				"IE",
				"IEnumerator\tIEnumerator"
			],
			[
				"Ienu",
				"IEnumerator\tIEnumerator"
			],
			[
				"_",
				"_period\tfloat"
			],
			[
				"time",
				"timeSinceStart\tfloat"
			],
			[
				"orig",
				"originalScale\tVector3"
			],
			[
				"loca",
				"localScale\tVector3"
			],
			[
				"sc",
				"localScale\tVector3"
			],
			[
				"trans",
				"transform\tTransform"
			],
			[
				"Deb",
				"Debug\tDebug"
			],
			[
				"VEcto",
				"Vector3\tVector3"
			],
			[
				"VEct",
				"Vector3\tVector3"
			],
			[
				"Mat",
				"Mathf\tMathf"
			],
			[
				"pi",
				"PI\tfloat"
			],
			[
				"mat",
				"Mathf\tMathf"
			],
			[
				"Draw",
				"DrawRay(Vector3 start, Vector3 dir)\tvoid"
			],
			[
				"Move",
				"MoveRotation(Quaternion rot)\tvoid"
			],
			[
				"Getm",
				"GetMouseButtonDown(int button)\tbool"
			],
			[
				"Vec",
				"Vector3\tV"
			],
			[
				"GetCompon",
				"GetComponent<T>()\tT"
			],
			[
				"Scree",
				"ScreenToWorldPoint(Vector3 position)\tVector3"
			],
			[
				"ro",
				"rotation\tQuaternion"
			],
			[
				"local",
				"localEulerAngles\tVector3"
			],
			[
				"Screen",
				"ScreenToWorldPoint(Vector3 position, MonoOrStereoscopicEye eye)\tVector3"
			],
			[
				"Scr",
				"ScreenToWorldPoint(Vector3 position)\tVector3"
			],
			[
				"m_",
				"m_Rigidbody\tRigidbody"
			],
			[
				"GetMou",
				"GetMouseButtonDown(int button)\tbool"
			],
			[
				"get",
				"GetKeyDown(string name)\tbool"
			],
			[
				"Rotate",
				"Rotate(Vector3 axis, float angle, Space relativeTo)\tvoid"
			],
			[
				"VEc",
				"Vector3\tVector3"
			],
			[
				"m",
				"m_Rigidbody\tRigidbody"
			],
			[
				"horizonta",
				"horizontal_input\tfloat"
			],
			[
				"Vector",
				"Vector3\tVector3"
			],
			[
				"Ge",
				"GetAxis(string axisName)\tfloat"
			],
			[
				"Vect",
				"Vector3\tVector3"
			],
			[
				"Co",
				"ComponentModel\tComponentModel"
			],
			[
				"StringBu",
				"StringBuilder"
			],
			[
				"Getu",
				"GetButton(string buttonName)\tbool"
			],
			[
				"Getc",
				"GetComponent<T>()\tT"
			],
			[
				"coll",
				"collisions\tCollisionInfo"
			],
			[
				"O",
				"OnJump\tMovementHandler"
			],
			[
				"GetCom",
				"GetComponentInChildren<T>()\tT"
			],
			[
				"Player",
				"PlayerMovementController\tPlayerMovementController"
			],
			[
				"Get",
				"GetComponent(string type)\tComponent"
			],
			[
				"PlayerMo",
				"PlayerMovementController\tPlayerMovementController"
			],
			[
				"GetCompo",
				"GetComponent<T>()\tT"
			],
			[
				"GetA",
				"GetAxisRaw(string axisName)\tfloat"
			],
			[
				"Play",
				"PlayerMovementController\tPlayerMovementController"
			],
			[
				"Playermove",
				"PlayerMovementController\tPlayerMovementController"
			],
			[
				"F",
				"fixedDeltaTime\tfloat"
			],
			[
				"Collsion",
				"CollisionDetector\tCollisionDetector"
			],
			[
				"acc",
				"accelerationTimeGrounded\tfloat"
			],
			[
				"target",
				"targetVelocityx\tfloat"
			],
			[
				"PlayerI",
				"PlayerInputHandler\tPlayerInputHandler"
			],
			[
				"Create",
				"CreateAssetMenuAttribute()\tCreateAssetMenuAttribute()"
			],
			[
				"On",
				"OnMove\tMovementHandler"
			],
			[
				"TestMO",
				"TestMovementHandler\tTestMovementHandler"
			],
			[
				"TestMove",
				"TestMovementHandler\tTestMovementHandler"
			],
			[
				"test",
				"TestMovementHandler\tTestMovementHandler"
			],
			[
				"Cl",
				"Compilation\tCompilation"
			],
			[
				"Scritable",
				"ScriptableObject\tScriptableObject"
			],
			[
				"MenuIt",
				"MenuItem(string itemName)\tMenuItem(string itemName)"
			],
			[
				"Unity",
				"UnityEditor\tUnityEditor"
			],
			[
				"ac",
				"activeObject\tObject"
			],
			[
				"Asset",
				"AssetDatabase\tAssetDatabase"
			],
			[
				"GetK",
				"GetKey(string name)\tbool"
			],
			[
				"Getax",
				"GetAxisRaw(string axisName)\tfloat"
			],
			[
				"SEt",
				"SetRayOrigin(bool isHorizontal, float direction)\tVector2"
			],
			[
				"dire",
				"directionY\tfloat"
			],
			[
				"getcom",
				"GetComponent<T>()\tT"
			],
			[
				"collision",
				"collisionMask\tLayerMask"
			],
			[
				"Racas",
				"RaycastHit\tRaycastHit"
			],
			[
				"Requi",
				"RequireComponent\tRequireComponent"
			],
			[
				"BoxCollider",
				"BoxCollider2D\tBoxCollider2D"
			],
			[
				"GEtCom",
				"GetComponent<T>()\tT"
			],
			[
				"RequireCompone",
				"RequireComponent(Type requiredComponent)\tRequireComponent(Type requiredComponent)"
			],
			[
				"Debug",
				"DebugDrawRays()\tvoid"
			],
			[
				"vertical",
				"verticalRaySpacing\tfloat"
			],
			[
				"Update",
				"UpdateRaycastOrigins()\tvoid"
			],
			[
				"Vertical",
				"VerticalCollisions(ref Vector2 velocity)\tvoid"
			],
			[
				"Collision",
				"CollisionDetector\tCollisionDetector"
			],
			[
				"fix",
				"fixedDeltaTime\tfloat"
			],
			[
				"rayca",
				"RaycastController\tRaycastController"
			],
			[
				"getc",
				"GetComponent<T>()\tT"
			],
			[
				"set",
				"SetRayOrigin(bool isHorizontal, float direction)\tVector2"
			],
			[
				"hori",
				"horizontalRaySpacing\tfloat"
			],
			[
				"direc",
				"directionX\tfloat"
			],
			[
				"Set",
				"SetRayOrigin(bool axis, float direction, ref Vector2 rayOrigin)\tV"
			],
			[
				"GetCo",
				"GetComponent<T>()\tT"
			],
			[
				"horiz",
				"horizontalRayCount\tint"
			],
			[
				"hor",
				"horizontalRayCount\tint"
			],
			[
				"verti",
				"verticalRaySpacing\tfloat"
			],
			[
				"Upda",
				"UpdateRaycastOrigins()\tvoid"
			],
			[
				"ver",
				"verticalRayCount\tint"
			],
			[
				"horizon",
				"horizontalRaySpacing\tfloat"
			],
			[
				"vertica",
				"verticalRaySpacing\tfloat"
			],
			[
				"horizontalRA",
				"horizontalRaySpacing\tfloat"
			],
			[
				"ray",
				"raycastOrigins\traycastOrigins"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Utility/LevelManger.cs",
			"settings":
			{
				"buffer_size": 3016,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Utility/Poof.cs",
			"settings":
			{
				"buffer_size": 1141,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Utility/ParticleEffectBurst.cs",
			"settings":
			{
				"buffer_size": 1174,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Platform/PlatformSpawner.cs",
			"settings":
			{
				"buffer_size": 7357,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Platform/BrickController.cs",
			"settings":
			{
				"buffer_size": 2303,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Utility/KillPlayer.cs",
			"settings":
			{
				"buffer_size": 721,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Utility/WinGame.cs",
			"settings":
			{
				"buffer_size": 325,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Collectable/StarPickup.cs",
			"settings":
			{
				"buffer_size": 1455,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "UI/ScoreManager.cs",
			"settings":
			{
				"buffer_size": 325,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Editor/LevelEditor.cs",
			"settings":
			{
				"buffer_size": 309,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Utility/RaycastCollisionDetection.cs",
			"settings":
			{
				"buffer_size": 5980,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: up",
				"Package Control: Upgrade Package"
			],
			[
				"Package Control: ",
				"Package Control: Enable Package"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package ",
				"Package Control: Remove Package"
			],
			[
				"Packa",
				"Package Control: Remove Package"
			],
			[
				"OmniSharp",
				"OmniSharpSublime: Restart Server"
			],
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 459.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			" import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"Package Control: Install Package OmniSharp",
			"cd",
			"ls",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"clear",
			"a",
			"asdf",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Ball",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Input",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Platform",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/UI",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Utility"
	],
	"file_history":
	[
		"/usr/share/aseprite/data/extensions/aseprite-theme/mindarktheme/package.json",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/UI/LevelFinishUI.cs",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Input/PlayerInput.cs",
		"/home/mathew/unity/Old Scripts/ChuuDee/Attack.cs",
		"/home/mathew/unity/Old Scripts/ChuuDee/RaycastController.cs",
		"/home/mathew/unity/Old Scripts/ChuuDee/Movement.cs",
		"/home/mathew/unity/Old Scripts/ChuuDee/Player.cs",
		"/home/mathew/unity/Old Scripts/2D Test_Assets_Scripts/PlayerController.cs",
		"/home/mathew/unity/Old Scripts/2D Test_Assets_Scripts/PlayerPhysics.cs",
		"/home/mathew/unity/Old Scripts/2D Platformer_Assets_ChuuDee_Scripts/Player.cs",
		"/tmp/mozilla_mathew0/EnemyMovement.cs",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/UI/LevelSlider.cs",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Utility/LevelManger.cs",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/mathew-omnisharp-magic.sublime-project",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Utility/VerticalJiggle.cs",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Platform/Platform.cs",
		"/home/mathew/unity/ChuuDii/Assets/unity_chuudii.sublime-project.meta",
		"/home/mathew/unity/ChuuDii/Assets/unity_chuudii.sublime-workspace.meta",
		"/home/mathew/unity/ChuuDii/ChuuDii.sln",
		"/home/mathew/unity/New Unity Project/New Unity Project.sln",
		"/home/mathew/unity/OMEGAVIRGIN/OMEGAVIRGIN.sln",
		"/home/mathew/LevelManger.cs",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Utility/ObjectPooler.cs",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Ball/ChangeColor.cs",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Utility/RaycastCollisionDetection.cs",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Platform/PlatformSpawner.cs",
		"/home/mathew/unity/OMEGAVIRGIN/Assets/Scripts/Shooty.cs",
		"/home/mathew/.Xresources",
		"/home/mathew/.config/i3/config",
		"/home/mathew/.config/i3/polybar/config",
		"/home/mathew/.config/i3/polybar/thaumcolors.txt",
		"/home/mathew/unity/OMEGAVIRGIN/Assets/Scripts/PlayerMovement.cs",
		"/home/mathew/bin/scripts/danktext",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Ball/SquashAndStretch.cs",
		"/home/mathew/unity/OMEGAVIRGIN/Assets/Scripts/CameraFollow.cs",
		"/home/mathew/.config/sublime-text-3/Packages/User/OmniSharpSublime.sublime-settings",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Utility/SceneManager.cs",
		"/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Scripts/Platform/BrickController.cs",
		"/home/mathew/unity/New Unity Project/Assets/Scripts/BrickController.cs",
		"/home/mathew/unity/New Unity Project/Assets/Scripts/VerticalJiggle.cs",
		"/home/mathew/unity/OMEGAVIRGIN/Assets/Scripts/Bullet.cs",
		"/home/mathew/unity/New Unity Project/Assets/Scripts/Jaggle.cs",
		"/tmp/mozilla_mathew0/SourceCode.cpp",
		"/home/mathew/unity/OMEGAVIRGIN/Assets/Scripts/QuickMaths.cs",
		"/home/mathew/unity/3D Beginner Tutorial Resources/Assets/Scripts/PlayerMovement.cs",
		"/home/mathew/unity/OMEGAVIRGIN/Assets/Scripts/PlayerGroovement.cs",
		"/home/mathew/unity/OMEGAVIRGIN/Assets/Scripts/Movement.cs",
		"/home/mathew/Downloads/QuickMaths.cs",
		"/home/mathew/unity/3D Beginner Tutorial Resources/Assets/Scripts/PlaerMovement.cs",
		"/home/mathew/p",
		"/home/mathew/.irssi/config",
		"/home/mathew/unity/OMEGAVIRGIN/Assets/unity_omegavirgin.sublime-project",
		"/home/mathew/bin/prog/google/makebricks_most_correct_tests",
		"/home/mathew/unity/OMEGAVIRGIN/Assets/Scripts/HelloWorld.cs",
		"/home/mathew/.config/sublime-text-3/Packages/OmniSharp/OmniSharpSublime.sublime-settings",
		"/home/mathew/unity/ChuuDii/Assets/unity_chuudii.sublime-project",
		"/home/mathew/bin/prog/java/hangman1/HangmanCanvas.java",
		"/home/mathew/bin/prog/java/hangman1/ACMConsole.java",
		"/home/mathew/bin/prog/java/hangman1/Main.java",
		"/home/mathew/bin/prog/java/hangman1/Hangman.java",
		"/home/mathew/Downloads/note",
		"/home/mathew/bin/prog/java/hangman1/ACMConsole.java;",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/CollisionDetector/CollisionDetector.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Movement/MoveEvent.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Movement/JumpEvent.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Movement/PlayerMoveListener.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/CollisionDetector/CollisionDetector.VerticalCollisions.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/PlayerInputHandler.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/CollisionDetector/CollisionDetector.HorizontalCollisions.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Movement/PlayerMovementController.cs",
		"/home/mathew/auracle/discord/PKGBUILD",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/SebastianLagueController/Controller2D.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/RaycastController/RaycastController.UpdateRaycastOrigins.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/CollisionDetector/CollisionDetector.SetRayOrigin.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/PlayerStats.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Test Scripts/OnMoveEvent.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/RaycastController/RaycastController.DebugDrawRays.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/RaycastController/RaycastController.CalculateRaySpacing.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/RaycastController/RaycastController.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Test Scripts/TestMovementHandler.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/TestCollisionDetector.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/InputHandler.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Player Stats.cs",
		"/home/mathew/unity/Old Scripts/ChuuDee/Controller2D.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Movement/MovementHandler.cs",
		"/home/mathew/.xinitrc",
		"/home/mathew/documents/colorthememaybe",
		"/home/mathew/.zshrc",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Test Scripts/OnJumpEvent.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Test Scripts/TestMovementEvents.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Test Scripts/CreateMoveEvent.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Movement/MoveTest.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Test Scripts/TestScript.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Test Scripts/OnMoveEvent.asset",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Player Movement.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Test Scripts/OnCrouchEvent.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/TestEvents.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Input Handler.cs",
		"/home/mathew/.config/unity3d/Editor.log",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/RaycastController/RaycastController.InitializeRaycastOrigins.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/CollisionDetector/CollisionDetector.SetCollisionOrigin.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/RaycastController/RaycastController.Initialize\u0013RaycastOrigins.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/TestVerticalCollisions.cs",
		"/home/mathew/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/RaycastController.meta",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/RaycastController.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/CollisionDetector.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Collisions/CollisionDetector.SetCollisionOrigin.cs",
		"/home/mathew/unity/ECS Test/Assets/Scripts/Rotator.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Player Input.cs",
		"/home/mathew/unity/ChuuDii/Assets/Scripts/Player/Player Controller.cs",
		"/home/mathew/unity/2D Platformer/Assets/ChuuDee/Scripts/KillZone.cs",
		"/home/mathew/unity/2D Platformer/Assets/ChuuDee/Scripts/Player.cs",
		"/home/mathew/unity/2D Platformer/Assets/ChuuDee/Scripts/PhysicsObject.cs",
		"/home/mathew/unity/2D Platformer/Assets/ChuuDee/Scripts/PlayerControllerDefaultPhysics.cs",
		"/home/mathew/unity/2D Platformer/Assets/ChuuDee/Scripts/PlatformerPlayerController.cs",
		"/home/mathew/unity/2D Platformer/Assets/ChuuDee/Scripts/PlayerMovement.cs",
		"/home/mathew/unity/2D Platformer/Assets/ChuuDee/Scripts/GameMaster.cs",
		"/home/mathew/unity/2D Platformer/TODOList",
		"/run/media/mathew/CamelToe/User Data/2018-12_2019-01/dotfolders/.config/i3/config",
		"/run/media/mathew/CamelToe/User Data/2018-12_2019-01/dotfiles/.zshrc"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Generate",
			"LoadScene",
			"LevelWin",
			"Reset",
			"target",
			"Start()",
			"Sfart",
			"\");\n",
			"OnLevelReset",
			"OnLevel",
			"als",
			"alsa",
			"ScreenToWorldPoint",
			"using",
			"underline",
			"cpu",
			"color",
			"completion",
			"wlan",
			"wla",
			"keyboard",
			"static ",
			"static",
			"pkgver",
			"battery",
			"speed",
			"target",
			"MovePlayer",
			"InitializeRaycastOrigins",
			"font",
			"memory",
			"title",
			"power",
			"rofi",
			"alsa",
			"title",
			"ramp",
			"memory",
			"cpu",
			"bar",
			"pixels",
			"font",
			"date",
			"DATE",
			"center",
			"#",
			"\"",
			";\n",
			"grav",
			"rayOrigin = ",
			"collider"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"HorizontalMoveEvent",
			"UpdateRaycastOrigins",
			"rgb:",
			"",
			"return ",
			"boxCollider2D"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Utility/LevelManger.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3016,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"oops":
							{
								"1756,1762": "Since 'LevelManger.LevelStart()' returns void, a return keyword must not be followed by an object expression",
								"26,31": "Unnecessary using directive."
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Utility/Poof.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1141,
						"regions":
						{
						},
						"selection":
						[
							[
								814,
								814
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Unnecessary using directive.",
								"135,149": "'Poof.particleSystem' hides inherited member 'Component.particleSystem'. Use the new keyword if hiding was intended.",
								"26,31": "Unnecessary using directive."
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 185.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Utility/ParticleEffectBurst.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1174,
						"regions":
						{
						},
						"selection":
						[
							[
								714,
								714
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Platform/PlatformSpawner.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7357,
						"regions":
						{
						},
						"selection":
						[
							[
								1536,
								1536
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2916.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Platform/BrickController.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2303,
						"regions":
						{
						},
						"selection":
						[
							[
								2302,
								2302
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1188.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Utility/KillPlayer.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 721,
						"regions":
						{
						},
						"selection":
						[
							[
								264,
								264
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Unnecessary using directive.",
								"184,195": "No overload for 'DisableSelf' matches delegate 'LevelManger.LevelChangeHandler'",
								"26,31": "Unnecessary using directive.",
								"79,84": "Unnecessary using directive."
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "Utility/WinGame.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 325,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Unnecessary using directive.",
								"220,231": "An object reference is required for the non-static field, method, or property 'LevelManger.LevelWin()'",
								"26,31": "Unnecessary using directive."
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Collectable/StarPickup.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1455,
						"regions":
						{
						},
						"selection":
						[
							[
								522,
								429
							]
						],
						"settings":
						{
							"oops":
							{
								"0,5": "Unnecessary using directive.",
								"26,31": "Unnecessary using directive.",
								"704,705": "; expected"
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "UI/ScoreManager.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 325,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Editor/LevelEditor.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 309,
						"regions":
						{
						},
						"selection":
						[
							[
								309,
								309
							]
						],
						"settings":
						{
							"oops":
							{
								"217,228": "The type 'LevelEditor' in '/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Editor/LevelEditor.cs' conflicts with the imported type 'LevelEditor' in 'InControl, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'. Using the type defined in '/home/mathew/unity/BallNBricks/Ball&Bricks/Assets/Editor/LevelEditor.cs'."
							},
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 324.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "Utility/RaycastCollisionDetection.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5980,
						"regions":
						{
						},
						"selection":
						[
							[
								4181,
								4181
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 125.0,
						"translation.y": 1242.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 132.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.variable_get":
	{
		"height": 178.0
	},
	"pinned_build_system": "",
	"project": "mathew-omnisharp-magic.sublime-project",
	"replace":
	{
		"height": 72.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 218.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
